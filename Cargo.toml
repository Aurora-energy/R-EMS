# ---------------------------------------------------------------------------
# Top-level Cargo workspace manifest for the R-EMS Core project.
#
# This file declares all service crates that make up the energy management
# system. Each service is a separate binary crate written in Rust and
# compiled as part of a single workspace so that shared dependencies are
# resolved consistently and build artifacts can be reused across crates.
# ---------------------------------------------------------------------------
[workspace]
# The `members` array enumerates every crate participating in the workspace.
# We explicitly list each service directory to keep the structure readable
# for newcomers browsing the repository.
members = [
    "services/bus",          # Distributed event bus service (tonic gRPC).
    "services/supervisor",   # Plugin lifecycle orchestrator.
    "services/registry",     # Plugin manifest registry and ACL validator.
    "services/configd",      # Dynamic configuration distributor.
    "services/logger",       # Structured logging and replay service.
    "services/gui",          # Web-based GUI served with Axum/Askama.
    "services/schemas",      # Protobuf schemas and generated Rust bindings.
]

# `resolver = "2"` enables the new feature resolver introduced in Cargo 1.51,
# preventing optional dependencies from being enabled unintentionally through
# transitive crates.
resolver = "2"

[workspace.package]
# Metadata describing the workspace as a whole. Individual crates can inherit
# fields like version, authors, and edition from here when they use
# `workspace = true` in their own `Cargo.toml` files.
edition = "2021"
authors = ["R-EMS Core Contributors <maintainers@example.com>"]
version = "0.1.0"
license = "Apache-2.0"

[workspace.dependencies]
# Workspace-level dependency versions. Keeping versions here ensures every
# service uses the same crate releases, which simplifies security audits and
# updates. Each service can opt into these dependencies by declaring
# `dependency = { workspace = true }` in its manifest.
anyhow = "1"
async-trait = "0.1"
axum = "0.7"
axum-extra = "0.9"
askama = { version = "0.12", features = ["with-axum"] }
askama_axum = "0.4"
clap = { version = "4", features = ["derive", "env"] }
config = "0.14"
notify = "6"
pulldown-cmark = "0.9"
reqwest = { version = "0.11", features = ["json", "rustls-tls"] }
serde = { version = "1", features = ["derive"] }
serde_json = "1"
serde_yaml = "0.9"
thiserror = "1"
tonic = { version = "0.10", features = ["transport"] }
tonic-build = "0.10"
prost = "0.12"
prost-types = "0.12"
tracing = "0.1"
tracing-appender = "0.2"
tracing-subscriber = { version = "0.3", features = ["env-filter"] }
tokio = { version = "1", features = ["rt-multi-thread", "macros", "signal", "fs", "io-util"] }
tower = "0.5"
tower-http = { version = "0.5", features = ["trace", "cors", "compression-full", "timeout"] }
metrics = "0.21"
metrics-exporter-prometheus = "0.13"
metrics-util = "0.15"
metrics-tracing-context = "0.14"

# End of workspace manifest.
